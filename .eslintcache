[{"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\index.js":"1","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\App.js":"2","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\menu.js":"3","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Routes.js":"4","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Home.js":"5","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\History.js":"6","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\ManagerTeam.js":"7","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\NotFoundPage.js":"8","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\header.js":"9","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\firebaseConfig.js":"10","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\listTeam.js":"11","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\listMember.js":"12","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\member.js":"13","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\li_listTeam.js":"14","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\Main.js":"15","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CenterInfo.js":"16","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Actions\\Actions.js":"17","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CurrentPage.js":"18","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Constants\\constant.js":"19","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Infomation.js":"20","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CenterData.js":"21","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\request.js":"22","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\authority.js":"23","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\Transactions.js":"24","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Utils\\Time_generator.js":"25","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Actions\\Action_transactions.js":"26","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\authoriryTeam.js":"27","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Hooks\\useGeoLocation.js":"28","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\Leaflex Components\\CenterLocation.js":"29","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Login_Register.js":"30","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Apps2.js":"31","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\UserLogin.js":"32","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Exit.js":"33","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Dashboard.js":"34","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Setting.js":"35","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Help.js":"36","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\historyItem.js":"37","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\UserLocation.js":"38"},{"size":580,"mtime":1608047739284,"results":"39","hashOfConfig":"40"},{"size":1846,"mtime":1609948626837,"results":"41","hashOfConfig":"40"},{"size":3120,"mtime":1609938241676,"results":"42","hashOfConfig":"40"},{"size":1342,"mtime":1609938292546,"results":"43","hashOfConfig":"40"},{"size":9865,"mtime":1609032400457,"results":"44","hashOfConfig":"40"},{"size":2640,"mtime":1608977687284,"results":"45","hashOfConfig":"40"},{"size":9944,"mtime":1609989683816,"results":"46","hashOfConfig":"40"},{"size":189,"mtime":1607244907084,"results":"47","hashOfConfig":"40"},{"size":5358,"mtime":1608981490870,"results":"48","hashOfConfig":"40"},{"size":574,"mtime":1607346701785,"results":"49","hashOfConfig":"40"},{"size":2001,"mtime":1609948734896,"results":"50","hashOfConfig":"40"},{"size":0,"mtime":1607393647228,"results":"51","hashOfConfig":"40"},{"size":3438,"mtime":1608804354977,"results":"52","hashOfConfig":"40"},{"size":471,"mtime":1609574102011,"results":"53","hashOfConfig":"40"},{"size":441,"mtime":1608997473400,"results":"54","hashOfConfig":"40"},{"size":353,"mtime":1607581440749,"results":"55","hashOfConfig":"40"},{"size":2116,"mtime":1609576484744,"results":"56","hashOfConfig":"40"},{"size":336,"mtime":1607421468396,"results":"57","hashOfConfig":"40"},{"size":589,"mtime":1607574965627,"results":"58","hashOfConfig":"40"},{"size":9061,"mtime":1611307908931,"results":"59","hashOfConfig":"40"},{"size":549,"mtime":1607666089930,"results":"60","hashOfConfig":"40"},{"size":7977,"mtime":1609007910666,"results":"61","hashOfConfig":"40"},{"size":4874,"mtime":1609004889014,"results":"62","hashOfConfig":"40"},{"size":626,"mtime":1608923765961,"results":"63","hashOfConfig":"40"},{"size":486,"mtime":1608914922105,"results":"64","hashOfConfig":"40"},{"size":320,"mtime":1608951630879,"results":"65","hashOfConfig":"40"},{"size":1881,"mtime":1608965302954,"results":"66","hashOfConfig":"40"},{"size":878,"mtime":1608213174023,"results":"67","hashOfConfig":"40"},{"size":288,"mtime":1608259481706,"results":"68","hashOfConfig":"40"},{"size":15617,"mtime":1608894843563,"results":"69","hashOfConfig":"40"},{"size":1146,"mtime":1609938188704,"results":"70","hashOfConfig":"40"},{"size":335,"mtime":1608693944737,"results":"71","hashOfConfig":"40"},{"size":1896,"mtime":1608967883201,"results":"72","hashOfConfig":"40"},{"size":765,"mtime":1608888261224,"results":"73","hashOfConfig":"40"},{"size":791,"mtime":1608888254045,"results":"74","hashOfConfig":"40"},{"size":788,"mtime":1608888263696,"results":"75","hashOfConfig":"40"},{"size":1678,"mtime":1608977703604,"results":"76","hashOfConfig":"40"},{"size":338,"mtime":1608997154015,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1jhyb04",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\index.js",[],["170","171"],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\App.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\menu.js",["172"],"import React, { Component } from 'react'\r\nimport * as constant from '../Constants/constant'\r\nimport {\r\n    Route,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nconst menuLink = [\r\n    {\r\n        \"namePage\":constant.HomeName,\r\n        \"to\":\"/\",\r\n        \"exact\":true,\r\n        \"img\":constant.HomeImg\r\n    },\r\n    {\r\n        \"namePage\":constant.ProfileName,\r\n        \"to\":\"/information\",\r\n        \"exact\":true,\r\n        \"img\":constant.ProfileImg\r\n    },\r\n    \r\n    {\r\n        \"namePage\":constant.HistoryName,\r\n        \"to\":\"/history\",\r\n        \"exact\":false,\r\n        \"img\":constant.HistoryImg\r\n    },\r\n\r\n    {\r\n        \"namePage\": constant.ManagerName,\r\n        \"to\":\"/manager-team\",\r\n        \"exact\":false,\r\n        \"img\":constant.ManagerImg\r\n    },\r\n    {\r\n        \"namePage\": constant.DashboardName,\r\n        \"to\":\"/dashboard\",\r\n        \"exact\":false,\r\n        \"img\":constant.DashboardImg\r\n    },\r\n    {\r\n        \"namePage\": constant.HelpName,\r\n        \"to\":\"/help\",\r\n        \"exact\":false,\r\n        \"img\":constant.HelpImg\r\n    },\r\n    {\r\n        \"namePage\":constant.SettingName,\r\n        \"to\":\"/setting\",\r\n        \"exact\":false,\r\n        \"img\":constant.SettingImg\r\n    },\r\n    {\r\n        \"namePage\": \"Exit\",\r\n        \"to\":\"/exit\",\r\n        \"exact\":false,\r\n        \"img\":\"./png/logout.png\" \r\n    },\r\n]\r\nvar Menulink =({pageName, to, activeOnlyWhenExact,img} )=>{\r\n    return (\r\n        <Route \r\n            path = {to}\r\n            exact = {activeOnlyWhenExact}\r\n            children= {({match})=>{\r\n                var active = (match)? \"active\":\" \";\r\n                return (\r\n             \r\n                <li className={`li-item cts-li $(active)`}>\r\n                    <Link to={to} className=\"a-item\" ></Link>\r\n                    <img className=\"img-history\" src={img} alt=\"icon_link\"  />\r\n                    <span className=\"span-text\">{pageName}</span>\r\n                </li>\r\n                \r\n\r\n                )\r\n            \r\n            }}\r\n            />\r\n    )}\r\nexport default class Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-2 h-100  customize-layout-left d-flex flex-column\">\r\n            <div className=\" div-logo \">\r\n              <a className=\"navbar-brand\" href=\"/\">\r\n                <img src=\"./logon.png\" alt=\"logo\" className=\"img_log\" />\r\n              </a>\r\n            </div>\r\n            <div className=\" flex-grow-1 div-item\">\r\n              <ul className=\"nav navbar-nav h-100 d-flex flex-column align-items-start\">\r\n                {this.showMenuLink(menuLink)}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n    showMenuLink(menuLink){\r\n        var result = null;\r\n        if(menuLink.length >0){\r\n            result = menuLink.map((link,index)=>{\r\n                return(\r\n                <Menulink \r\n                key = {index}\r\n                pageName={link.namePage}\r\n                to ={link.to}\r\n                activeOnlyWhenExact = {link.exact}\r\n                img={link.img}\r\n                ></Menulink>\r\n                )\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n}\r\n","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Routes.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Home.js",["173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React, { useFetching,useEffect,useMemo,useCallback,useState,useRef  } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup,Tooltip } from 'react-leaflet';\r\nimport { useMapEvents } from 'react-leaflet'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport L from \"leaflet\";\r\nimport { connect } from 'react-redux'\r\nimport {Set_Page,} from './../Actions/Actions'\r\nimport {app} from '../firebaseConfig'\r\n\r\n\r\nconst CenterIcon = new L.Icon({\r\n  iconUrl: (\"./png/myCenter.png\"),\r\n  iconSize: [32, 32],\r\n  iconAnchor: [17, 46], \r\n  popupAnchor: [0, -46],\r\n});\r\nconst TeamIcon = new L.Icon({\r\n  iconUrl: (\"./png/teamLocation.png\"),\r\n  iconSize: [32, 32],\r\n  iconAnchor: [17, 46], \r\n  popupAnchor: [0, -46],\r\n});\r\nconst UserIcon = new L.Icon({\r\n  iconUrl: (\"./png/userLocation.png\"),\r\n  iconSize: [32, 32],\r\n  iconAnchor: [17, 46], \r\n  popupAnchor: [0, -46],\r\n});\r\n\r\n\r\nexport const Component = (props) => {\r\nconst useLogin = useSelector((state) => state.userLogin);\r\nconst[center,setCenter] = useState(\r\n     [16.060392,108.211847]\r\n)\r\n\r\nconst [draggable, setDraggable] = useState(true)\r\nconst [Transaction, setTransaction] = useState(null)\r\nconst [CenterLocation, setCenterLocation] = useState(null)\r\nconst [tmpLocation, setTmpLocation] = useState(null)\r\n\r\nconst [TeamLocation, setTeamLocation] = useState(null)\r\nconst [UserLocation, setUserLocation] = useState(null)\r\nconst localStorageID = localStorage.getItem('centerID')\r\nconst stateID = useLogin.center_id\r\nconst centerID = localStorageID ? localStorageID : stateID\r\n\r\n\r\nconst id = localStorage.getItem('centerID')\r\nconst city = localStorage.getItem('centerCity')\r\nconst type = localStorage.getItem('centerType')\r\n\r\n\r\nvar database_getCenterLocation = app.database().ref().child(`InfomationCenter/${centerID}`)\r\nconst database_Transactions = app.database().ref().child(`CenterTeam/${centerID}/Transactions/`)\r\nvar database_UpdateLocationSupport = app.database().ref().child(`SupportCenter/${type}/${city}/${id}/`)\r\n/* var database_UpdateLocationSupport = \"\" */\r\nconst dispatch = useDispatch()\r\nconst user_location = useSelector((state) => state.userlocation);\r\n\r\nuseEffect(() => {\r\n  \r\n  dispatch(Set_Page(1));\r\n  var a= setInterval(()=>{\r\n    const id = localStorage.getItem('centerID')\r\n    const city = localStorage.getItem('centerCity')\r\n    const type = localStorage.getItem('centerType')\r\n    if(id){\r\n      clearInterval(a)\r\n       database_getCenterLocation = app.database().ref().child(`InfomationCenter/${id}/`)\r\n       database_UpdateLocationSupport =  app.database().ref().child(`SupportCenter/${type}/${city}/${id}/`)\r\n      \r\n       database_getCenterLocation.once(\"value\",(snap)=>{\r\n      if(snap.val()){\r\n      const lat =snap.val().center_latitude\r\n      const lng=snap.val().center_longitude\r\n      if(lng){\r\n        setCenterLocation([lat,lng])\r\n        setCenter([lat,lng])\r\n      }\r\n    }\r\n    if(user_location.latitude_user){\r\n      console.log(JSON.stringify(user_location))\r\n      setTmpLocation([user_location.latitude_user,user_location.longitude_user])\r\n    }\r\n  })\r\n  }},100)\r\n\r\n      database_Transactions.on(\"value\",(snap)=>{\r\n     setTransaction(snap.val())\r\n     })\r\n\r\n}, [])\r\n\r\n\r\nconst DraggableMarker =()=> {\r\n\r\n  const markerRef = useRef(null)\r\n  const eventHandlers = useMemo(\r\n    () => ({\r\n      dragend() {\r\n        const marker = markerRef.current\r\n        if (marker != null) {\r\n          setCenterLocation(marker.getLatLng())\r\n          database_getCenterLocation.update({\r\n            center_latitude: `${marker.getLatLng().lat}`,\r\n            center_longitude:`${marker.getLatLng().lng}`,\r\n          })\r\n          database_UpdateLocationSupport.update({\r\n            center_latitude: `${marker.getLatLng().lat}`,\r\n            center_longitude:`${marker.getLatLng().lng}`,\r\n          })\r\n          localStorage.setItem('latitude',marker.getLatLng().lat)\r\n          localStorage.setItem('longitude',marker.getLatLng().lng)\r\n        }\r\n      },\r\n    }), [], )\r\n  \r\n\r\n const map = useMapEvents({\r\n      click() {\r\n        map.locate()\r\n      },\r\n      locationfound(e) {\r\n        map.flyTo(CenterLocation, 13)\r\n      },\r\n    })\r\n  \r\n  const toggleDraggable = useCallback(() => {\r\n    setDraggable((d) => !d)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Marker\r\n      icon={CenterIcon}\r\n      draggable={draggable}\r\n      eventHandlers={eventHandlers}\r\n      position={CenterLocation}\r\n      ref={markerRef}>\r\n      <Tooltip direction=\"top\" permanent offset={[0, -50]}>Your Center</Tooltip>\r\n      <Popup maxWidth={200} >\r\n        <span onClick={toggleDraggable}>\r\n          {draggable\r\n            ? 'Is this your position? If not, drag and drop at the position you want!'\r\n            : 'Click here to make marker draggable'}\r\n        </span>\r\n      </Popup>\r\n    </Marker>\r\n  )\r\n}\r\n\r\n\r\nconst FirstCenterLocation=()=> {\r\n  const [position, setPosition] = useState(null)\r\n  const markerRef = useRef(null)\r\n  const eventHandlers = useMemo(\r\n    () => ({\r\n      dragend() {\r\n        const marker = markerRef.current  \r\n        if (marker != null) {\r\n          setCenterLocation(marker.getLatLng())\r\n          database_getCenterLocation.update({\r\n            center_latitude: `${marker.getLatLng().lat}`,\r\n            center_longitude:`${marker.getLatLng().lng}`,\r\n          })\r\n        /*   localStorage.setItem('latitude',marker.getLatLng().lat)\r\n          localStorage.setItem('longitude',marker.getLatLng().lat) */\r\n  \r\n\r\n        }\r\n      },\r\n    }),\r\n    [],\r\n  )\r\n    const map = useMapEvents({\r\n      click() {\r\n        map.locate()\r\n      },\r\n      locationfound(e) {\r\n        setPosition(e.latlng)\r\n        map.flyTo(e.latlng, 13)\r\n        database_getCenterLocation.update({\r\n          center_latitude: `${e.latlng.lat}`,\r\n          center_longitude:`${e.latlng.lng}`,\r\n        })\r\n\r\n        database_UpdateLocationSupport.update({\r\n          center_latitude: `${e.latlng.lat}`,\r\n          center_longitude:`${e.latlng.lng}`,\r\n        })\r\n        localStorage.setItem('latitude',e.latlng.lat)\r\n        localStorage.setItem('longitude',e.latlng.lng)\r\n\r\n\r\n      },\r\n    })\r\n  \r\n  const toggleDraggable = useCallback(() => {\r\n    setDraggable((d) => !d)\r\n  }, [])\r\n\r\n  return position  === null ? null : (\r\n    <Marker position={position}\r\n     icon={CenterIcon}\r\n    draggable={draggable}\r\n    eventHandlers={eventHandlers}\r\n    ref={markerRef}>\r\n      <Tooltip direction=\"top\" offset={[0, -50]} opacity={1} permanent>\r\n        Is this your position? If not, drag and drop at the position you want!\r\n      </Tooltip>\r\n    </Marker>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst ShowUserLocation=()=>{\r\n  const view = Object.values(Transaction).map((value,index)=>{\r\n    if(value.user_latitude && value.user_longitude){\r\n    const lat = value.user_latitude\r\n    const lng = value.user_longitude\r\n    const name = value.name\r\n    const phone = value.phone\r\n      return(\r\n          <Marker\r\n          key={index}\r\n          icon={UserIcon}\r\n          position={[lat,lng]}>\r\n          <Tooltip permanent direction=\"top\" offset={[0, -45]} opacity={1} sticky>\r\n             {name}\r\n          </Tooltip>\r\n          </Marker>   \r\n        )  \r\n    }\r\n  })\r\n  return view\r\n}\r\n\r\n\r\nconst ShowTeamLocation=()=>{\r\n  const view = Object.values(Transaction).map((value,index)=>{\r\n    if(value.team_latitude && value.team_longitude){\r\n    const lat = value.team_latitude\r\n    const lng = value.team_longitude\r\n    var teamName= null\r\n    if(value.team_name){\r\n      teamName = value.team_name\r\n    }\r\n    const Message =  value.user_id?`On duty...`:`Ready...`\r\n    return(\r\n      <Marker\r\n      key={index}\r\n      icon={TeamIcon}\r\n      position={[lat,lng]}\r\n      >\r\n      <Tooltip direction=\"top\" maxWidth={10} offset={[0, -45]} opacity={1} permanent>\r\n        {teamName?teamName:\"Team\"}\r\n         {/* {Message} */}\r\n      </Tooltip>\r\n      </Marker>\r\n    )\r\n  }\r\n})\r\n  return view\r\n}\r\nconst ShowUserRequest=()=>{\r\n  if(localStorage.getItem('userLongitude')){\r\n    const name = user_location.userName\r\n    const latitude = user_location.latitude_user\r\n    const longitude = user_location.longitude_user\r\n    return(\r\n      <Marker\r\n      icon={UserIcon}\r\n     /*  position={[localStorage.getItem('userLatitude'),localStorage.getItem('userLongitude')]} */\r\n     position={[16.155,108.1455]}\r\n      >\r\n      <Tooltip direction=\"top\" maxWidth={10} offset={[0, -45]} opacity={1} permanent>\r\n        {name?name:\"Ko Tên\"}\r\n      </Tooltip>\r\n      </Marker>\r\n    )\r\n  }\r\n  else return false\r\n\r\n    \r\n}\r\n/* var location = []\r\nif(localStorage.getItem('latitude')){\r\nconst lat = localStorage.getItem('latitude')\r\nconst lng = localStorage.getItem('longitude')\r\n location = [lat,lng]\r\n} */\r\n\r\n    return (\r\n      <div classname=\"flex-grow-1 map\" >\r\n        {center?console.log(center):console.log(\"null\")}\r\n      <MapContainer  style={{width: '100%', height: '93.2vh',position:\"relative\",zIndex:'0'}}\r\n           /*  center={location?location:center} */\r\n           center={localStorage.getItem('latitude')?[localStorage.getItem('latitude'),localStorage.getItem('longitude')]:center}\r\n            zoom={localStorage.getItem('latitude')? 13: 2}\r\n          /*   zoom={ 13} */\r\n\r\n            scrollWheelZoom={true}>\r\n           \r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n         {CenterLocation? <DraggableMarker/>:console.log(\" đang hiện lần đầu\")}\r\n    \r\n        {!CenterLocation?<FirstCenterLocation/>:console.log(\"đang hiện lần sau\")}\r\n      {Transaction? <ShowUserLocation/>:console.log(\"Chưa nhận request nào từ user\")}\r\n      {Transaction? <ShowTeamLocation/>:console.log(\"Chưa có team nào\")}\r\n    \r\n      </MapContainer>,\r\n \r\n      </div>\r\n      )\r\n    \r\n    }\r\n\r\n/* export default Component */\r\n\r\n\r\nexport default Component\r\n","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\History.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\ManagerTeam.js",["190","191"],"import $ from 'jquery'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ListTeam from 'Components/listTeam'\r\nimport Li_Listteam from 'Components/li_listTeam'\r\nimport { On_Read_Data, Read_Data, Set_Page, Set_Team } from 'Actions/Actions'\r\nimport { app } from 'firebaseConfig'\r\n\r\n\r\n\r\n\r\nclass ManagerTeam extends Component {\r\n  constructor(props) {\r\n     super(props);\r\n     this.countTeam = 0\r\n     this.codeTeam =1000\r\n     this.teamName =\"\"\r\n     this.state ={\r\n         currentTeam:\"\",\r\n         countTeam:null,\r\n         teamName: \"firtvalue\"\r\n     }\r\n    \r\n     \r\n  }\r\n  componentDidMount(){\r\n    var allow = true\r\n    console.log(\"component didmount\")\r\n    this.props.setPage(4);\r\n    var database = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/`)\r\n    \r\n    database.on('value', (dataSnapshot)=> {\r\n      if(allow){\r\n        this.props.getData();\r\n        allow = false\r\n      }\r\n      else{\r\n        this.props.On_getData();\r\n      }\r\n    })\r\n  \r\n  }\r\n\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n }\r\n\r\n  componentDidUpdate(){\r\n}\r\n\r\n\r\n  countTeams = ()=>{\r\n    if(this.props.infos.dataCenter){\r\n      this.countTeam = Object.values(this.props.infos.dataCenter).length\r\n    }\r\n  }\r\n\r\n  setCurrentTeam=(code,name)=>{\r\n    this.props.setTeam(code)\r\n    this.setState({\r\n      currentTeam:code,\r\n      teamName:name\r\n    })\r\n  }\r\n\r\n  readTeamList=()=>{\r\n    const infos = this.props.infos.dataCenter  \r\n    var active=2\r\n    var result = Object.values(infos).map((value,index)=>{ \r\n      if(value){\r\n        this.codeTeam = Number(value.code.substring(1, 5));\r\n      }\r\n      active--;\r\n      if(active<1){\r\n        active =0\r\n      }\r\n      return(\r\n        <Li_Listteam KeyTeam={value.code} setCurrentTeam={this.setCurrentTeam}  active={active} code={index}  key={index} team_name={value.team_name} />\r\n      ) \r\n  })\r\n\r\n  return  result\r\n}\r\n\r\n\r\n  listTeam_render=()=>{\r\n  const infos = this.props.infos.dataCenter\r\n  var active=2\r\n  var result = Object.values(infos).map((value,index)=>{ \r\n    active--;\r\n    if(active<1){ \r\n      active =0\r\n    }\r\n    return(\r\n      <ListTeam addNewMember={()=>this.createNewMember()} team_name={value.team_name} members={value.members}  active={active} code={index}  key={index}/>\r\n    )\r\n})\r\nreturn result\r\n}\r\n\r\ncreateNewMember=()=>{\r\n  this.database = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${this.props.infos.currentTeam}/members`)\r\n      this.database.push({\r\n        name:\"Null\",\r\n        phone:\"Null\",\r\n        position:\"Null\",\r\n        avatar: `./png/avatar_${Math.floor(Math.random() * 5) + 1}.jpg`\r\n      })\r\n  }\r\n\r\n\r\n\r\ncreateNewTeam=()=>{\r\n  if(this.countTeam >4){\r\n    alert(\"Số team nhiều nhất có thể là 5\")\r\n  }\r\n  else{\r\n\r\n    $(\".tab-container\").on('DOMNodeInserted', function(e) {\r\n     if(e.target.classList)\r\n     e.target.classList.add(\"active\")\r\n    });\r\n    $(\".nav-tabs\").on('DOMNodeInserted', function(e) {\r\n      console.log(\"Chạy ở đây\")\r\n      if(e.target.querySelector('[href]'))\r\n    e.target.querySelector('[href]').classList.add(\"active\")\r\n   \r\n    });\r\n   \r\n    if( document.querySelector('li.nav-item > a.active')){\r\n      document.querySelector('li.nav-item > a.active').classList.remove('active')\r\n      document.querySelector('div.tab-content > div.active').classList.remove('active')\r\n      \r\n    }\r\n    this.setState({\r\n      teamName:\"New Team\"\r\n    })\r\n\r\n    this.countTeam++\r\n    this.codeTeam = +this.codeTeam+1\r\n    const idTeam = \"z\"+this.codeTeam+\"z\"\r\n    this.props.setTeam(idTeam)\r\n    this.databaseInfo = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${idTeam}`)\r\n      this.databaseInfo.set({\r\n        status_active:false,\r\n        code:idTeam,\r\n        members:null,\r\n        Mission:{\r\n          status:\"false\"\r\n        },\r\n        team_name:\"New Team*\",\r\n        team_latitude:\"\",\r\n        team_longitude:\"\",\r\n      })\r\n      this.databaseTransaction = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/Transactions/${idTeam}`)\r\n      this.databaseTransaction.set({\r\n          team_latitude:\"\",\r\n          team_longitude:\"\",\r\n          user_id:\"\",\r\n          user_longitude:\"\",\r\n          user_latitude:\"\",\r\n          name:\"\",\r\n          phone:\"\",\r\n          team_name:\"New Team*\"\r\n      })\r\n  }\r\n\r\n \r\n}\r\n\r\ndeleTeam=()=>{\r\n  const infos = this.props.infos.dataCenter\r\n  if(Object.values(infos).length){\r\n  \r\n   \r\n  this.countTeam = Object.values(infos).length\r\n  if(this.countTeam==1){\r\n    const databaseInformation = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/`)\r\n    databaseInformation.update({\r\n      InforTeam:\"\"\r\n    })\r\n    const databaseTransactions = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/`)\r\n    databaseTransactions.update({\r\n      Transactions:\"\"\r\n    })\r\n    this.countTeam=0\r\n  }else{\r\n  var listCodeTeam = []\r\n  listCodeTeam = Object.values(infos).map((value,index)=>{\r\n    return value.code\r\n  })\r\n  const vt = listCodeTeam.indexOf(this.props.infos.currentTeam)\r\n  if(Object.keys(infos)[vt+1]){\r\n    this.props.setTeam(Object.keys(infos)[vt+1])\r\n  }\r\n  else{\r\n    this.props.setTeam(Object.keys(infos)[vt-1])\r\n   document.querySelector(`[href='#index${vt-1}'`).classList.add('active')\r\n   document.querySelector(`#index${vt-1}`).classList.add('active')\r\n  }\r\n\r\n  this.countTeam--\r\n  const databaseInfo = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${this.props.infos.currentTeam}`)\r\n  databaseInfo.remove()\r\n  const databaseTransaction = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/Transactions/${this.props.infos.currentTeam}`)\r\n  databaseTransaction.remove()\r\n}\r\n}\r\nelse{\r\n  alert(\"Không có team nào để xóa!!\")\r\n}\r\n}\r\n\r\n\r\nviewCode=()=>{\r\n  alert(\"Enter This Code On The Mobile App To Login:   \"+this.props.infos.currentTeam)\r\n}\r\n\r\n/* updateName =()=>{\r\n\r\n  const databaseTransaction =app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/Transactions/${this.props.infos.currentTeam}/`)\r\n  databaseTransaction.update({\r\n    team_name: this.state.teamName\r\n  })\r\n\r\n  const database_UpdateTeamName = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${this.props.infos.currentTeam}/`)\r\n  database_UpdateTeamName.update({\r\n    team_name: this.state.teamName\r\n  })\r\n \r\n\r\n} */\r\n\r\n\r\nnameChange = (event)=>{\r\n  const name = event.target.name\r\n  const value = event.target.value\r\n  this.setState({\r\n    [name]: value\r\n  })\r\n  const database_Transaction =app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/Transactions/${this.props.infos.currentTeam}/`)\r\n  database_Transaction.update({\r\n    team_name:event.target.value\r\n  })\r\n  const database_UpdateTeamName = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${this.props.infos.currentTeam}/`)\r\n  database_UpdateTeamName.update({\r\n    team_name:  event.target.value\r\n  })\r\n  \r\n}\r\n  \r\n    render() {\r\n      console.log(\"component render\")\r\n        return (\r\n        <div className=\"flex-grow-1 map\">\r\n          <div className=\"contain\">\r\n            <ul className=\"nav nav-tabs ul-height mr-auto\" role=\"tablist\">\r\n               {this.readTeamList()}\r\n               <li className=\"nav-item\">\r\n               <button onClick={()=>{this.createNewTeam()}} \r\n                    type=\"button\" name id\r\n                    className=\" btn-primary  btn_dele_team \" \r\n                    data-toggle=\"delete team\" data-placement=\"bottom\" \r\n                    title=\"Add new a team!\">\r\n                    <i class=\"fa align_bottom  fa-plus-square-o\" aria-hidden=\"true\"></i>\r\n               </button>\r\n              </li>\r\n              <div className=\"util_team d-flex \">\r\n              <div className=\"input-group e_name mb-3\">\r\n                  <input  className=\"form-control i_outline form-control-sm\" name=\"teamName\" onChange={(event)=>{this.nameChange(event)}} value={this.state.teamName}/>\r\n                  <div className=\"input-group-append\">\r\n                    <button onClick={this.updateName} className=\"btn btn-sm btn-success\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>  \r\n                  </div>\r\n              </div>\r\n\r\n            <button onClick={()=>{this.viewCode()}}\r\n                    className=\"ml-auto btn_dele_team btn-secondary btn_dele \"\r\n                    data-toggle=\"delete team\" data-placement=\"bottom\" \r\n                    title=\"View Code!\"\r\n                    >\r\n                    <i class=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            <button onClick={()=>{this.deleTeam()}}\r\n                    className=\"ml-auto btn_dele_team btn-danger btn_view \" id=\"btnv\"\r\n                    data-toggle=\"delete team\" data-placement=\"bottom\" \r\n                    title=\"Deleted This Team!\"\r\n                    >\r\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            </div>\r\n            </ul>\r\n            <div className=\" tab-content tab-container\">\r\n               {this.listTeam_render()}\r\n               {\r\n                  this.countTeams()\r\n               }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      infos: state.centerData\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n      getData: () => {\r\n          dispatch(Read_Data());\r\n      },\r\n      On_getData:() =>{\r\n        dispatch(On_Read_Data());\r\n      },\r\n      setPage: (page) => {\r\n        dispatch(Set_Page(page));\r\n    },\r\n    setTeam: (team) => {\r\n      dispatch(Set_Team(team));\r\n  },\r\n    \r\n     \r\n  }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(ManagerTeam)\r\n","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\NotFoundPage.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\header.js",["192","193","194","195","196"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as constant from '../Constants/constant'\r\n/* import { LocalStorage } from \"node-localstorage\"; */\r\nimport {app} from '../firebaseConfig'\r\n \r\n\r\n\r\n class header extends Component {\r\n  constructor(props) {\r\n     super(props);\r\n     this.state ={\r\n          name: localStorage.getItem('centerName'),\r\n          id: localStorage.getItem('centerID'),\r\n          status:\"\"\r\n     }\r\n  }\r\n\r\n  componentDidMount(){\r\n   var a= setInterval(()=>{\r\n     const name = localStorage.getItem('centerName')\r\n     const id = localStorage.getItem('centerID')\r\n     const centerCity = localStorage.getItem('centerCity')\r\n     if(id && name &&centerCity){\r\n       clearInterval(a)\r\n       this.getStatus()\r\n       this.setState({\r\n        name: localStorage.getItem('centerName'),\r\n        id: localStorage.getItem('centerID'),\r\n     })\r\n     this.login()\r\n   }},100)\r\n\r\n  \r\n}\r\nlogin=()=>{\r\n  const centerCity = localStorage.getItem('centerCity')\r\n  const centerID = localStorage.getItem('centerID')\r\n  const centerType = localStorage.getItem('centerType')\r\n  const database_getCenterStatus = app.database().ref().child(`SupportCenter/${centerType}/${centerCity}/${centerID}/`)\r\n  database_getCenterStatus.update({\r\n    center_status:\"true\"\r\n  })\r\n}\r\n\r\n\r\n  pageName =(page)=>{\r\n    switch (page) {\r\n      case 1:{\r\n        return \"Home\"\r\n      }\r\n      case 2:{\r\n        return \"Profile\"\r\n        }\r\n      case 3:{\r\n      return \"History\"\r\n      }\r\n      case 4:{\r\n        return \"Manager Team\"\r\n      }\r\n      case 5:{\r\n        return \"Dashboard\"\r\n      }\r\n      case 6:{\r\n        return \"Help\"\r\n      }\r\n      case 7:{\r\n        return \"Setting\"\r\n      }\r\n      default:\r\n        break;\r\n      }\r\n    }\r\n    pageImage =(page)=>{\r\n      switch (page) {\r\n        case 1:{\r\n          return constant.HomeImg\r\n        }\r\n        case 2:{\r\n          return constant.ProfileImg\r\n          }\r\n        case 3:{\r\n        return constant.HistoryImg\r\n        }\r\n        case 4:{\r\n          return constant.ManagerImg\r\n        }\r\n        case 5:{\r\n          return constant.DashboardImg\r\n        }\r\n        case 6:{\r\n          return constant.HelpImg\r\n        }\r\n        case 7:{\r\n          return constant.SettingImg\r\n        }\r\n        default:\r\n          break;\r\n        }\r\n      }\r\n    getStatus =()=>{\r\n      const centerCity = localStorage.getItem('centerCity')\r\n      const centerID = localStorage.getItem('centerID')\r\n      const centerType = localStorage.getItem('centerType')\r\n      const database_getCenterStatus = app.database().ref().child(`SupportCenter/${centerType}/${centerCity}/${centerID}/`)\r\n      database_getCenterStatus.on('value',(datasnapshot)=>{\r\n         this.setState({\r\n          status: datasnapshot.val().center_status\r\n         })\r\n      })\r\n    }\r\n\r\n    setStatus =()=>{\r\n      const centerCity = localStorage.getItem('centerCity')\r\n      const centerID = localStorage.getItem('centerID')\r\n      const centerType = localStorage.getItem('centerType')\r\n      const database_getCenterStatus = app.database().ref().child(`SupportCenter/${centerType}/${centerCity}/${centerID}/`)\r\n      database_getCenterStatus.update({\r\n        center_status:this.state.status==\"true\" ? \"false\":\"true\"\r\n      })\r\n    }\r\n    status=()=>{\r\n      if(this.state.status ==\"true\"){\r\n        return <input onClick={()=>{this.setStatus()}} defaultChecked type=\"checkbox\"  />\r\n      }else{\r\n        return  <input onClick={()=>{this.setStatus()}} type=\"checkbox\"  />\r\n      }\r\n    }\r\n    render() {\r\n        return (\r\n       \r\n            <div className=\"div-head d-flex justify-content-between flex-wrap\">\r\n            <div className=\"div-head-lef p-2\">\r\n           \r\n              <h4 style={{color: 'whitesmoke', fontSize: '21px'}}>\r\n              <img className=\"img-history mr-2\" src={`${this.pageImage(this.props.page)}`} alt=\"icon_link\"/>\r\n               {this.pageName(this.props.page)}</h4>\r\n            </div>\r\n            <div className=\"ml-auto mr-2\" style={{marginTop: '9px'}}>\r\n              <label className=\"switch\">\r\n                {this.status()}\r\n                <span className=\"slider round\" />\r\n              </label>\r\n            </div>\r\n            <div className=\"div-head-right d-flex justify-content-between\">\r\n              <img className=\"img-center\" src=\"./png/avatar_1.jpg\" alt=\"\" />\r\n              <div className=\"well-name\">\r\n              <div className=\"dropdown\">\r\n              <button className=\"btn dr_custome dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Wellcome\r\n                <span className=\"caret\" /></button>\r\n              <ul className=\"dropdown-menu\">\r\n                <li><a href=\"#\"> Logout</a></li>\r\n                <li><a href=\"#\"> Language</a></li>\r\n                <li><a href=\"#\"> Setting</a></li>\r\n              </ul>\r\n            </div>\r\n\r\n                <p className=\"center-name\">{this.state.name}</p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n      userInfo: state.userLogin,\r\n      // có gì ở đây đâu\r\n      page: state.currentPage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n     \r\n     \r\n  }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(header)","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\firebaseConfig.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\listTeam.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\listMember.js",[],["197","198"],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\member.js",[],["199","200"],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\li_listTeam.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\Main.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CenterInfo.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Actions\\Actions.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CurrentPage.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Constants\\constant.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Infomation.js",["201"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Set_Page,Read_Data_Information} from './../Actions/Actions'\r\nimport {app} from '../firebaseConfig'\r\nimport axios from 'axios'   \r\nclass Information extends Component {\r\n    constructor(props) {\r\n       super(props);\r\n       this.state ={\r\n            statusFormEdit:false,\r\n            name:\"\",\r\n            phone:\"\",\r\n            address:\"\",\r\n            email:\"\",\r\n            type:\"\"\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        var key = event.target.name;\r\n        var value =event.target.value;\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n  componentDidMount(){\r\n    this.props.setPage(2);\r\n    this.props.getData();\r\n    const database = app.database().ref().child(`InfomationCenter/${localStorage.getItem('centerID')}/`)\r\n    database.on('value', (dataSnapshot)=> {\r\n        this.props.getData();\r\n      })\r\n  }\r\n  \r\n  saveInfo=()=>{\r\n    /* console.log(\"Dữ liệu chuẩn bị lưu là:\"+JSON.stringify(this.state))\r\n    const database = app.database().ref().child(`InfomationCenter/${localStorage.getItem('centerID')}/`)\r\n    var updates = {\r\n        center_name:this.state.name,\r\n        center_phone:this.state.phone,\r\n        center_address:this.state.address,\r\n        center_email:this.state.email,\r\n        center_type:this.state.type,\r\n\r\n    };\r\n    database.update(updates);\r\n    this.setState({\r\n        statusFormEdit : !this.state.statusFormEdit\r\n    }) */\r\n    alert(\"cc\")\r\n    axios({\r\n      method: 'GET',\r\n      url:'http://courses.duytan.edu.vn/Sites/Home_ChuongTrinhDaoTao.aspx?p=home_listcoursedetail&courseid=1022&timespan=71&t=s',\r\n      data:null,\r\n    }).then(res=>{\r\n      console.log(res.data)\r\n    })\r\n    .catch(err=>{\r\n      console.log('Không kết nối được!!')\r\n    });\r\n   \r\n  }\r\n\r\n    setStatus=()=>{\r\n        const {center}= this.props\r\n        this.setState({\r\n        statusFormEdit : !this.state.statusFormEdit,\r\n        name:center.center_name,\r\n        phone:center.center_phone,\r\n        address:center.center_address,\r\n        email:center.center_email,\r\n        type:center.center_type\r\n      })\r\n    }\r\n    fomrClose=(event)=>{\r\n        if(event.target.id ==\"close\")\r\n        {\r\n            this.setState({\r\n                statusFormEdit : !this.state.statusFormEdit,\r\n            }) \r\n        }\r\n    \r\n    }\r\n   \r\n\r\n\r\n    \r\n    showEdit =()=>{\r\n        if(this.state.statusFormEdit)\r\n        {\r\n            const {center}= this.props\r\n            return (\r\n                <div className=\"form-edit\" id=\"close\" onClick={(event)=>{this.fomrClose(event)}}>\r\n                <div className=\"edit\">\r\n                  <button className=\"btn-close-form  rounded-circle border border-primary\" onClick={(event)=>{this.fomrClose(event)}}><i id=\"close\" className=\"fa fa-times\" aria-hidden=\"true\" /></button>\r\n                  <h2 className=\"mx-auto  text-center d-block position-relative\" style={{color: 'white'}}>EDIT\r\n                    INFORMATION</h2>\r\n                  <div className=\"p-0\">\r\n                    <div className=\"mt-cts d-flex mt-5\">\r\n                      <label className=\"position-absolute color-label\"><i className=\"fa fa-user-o\" aria-hidden=\"true\" /> Center Name*:</label>\r\n                      <input placeholder=\"Example: Police Man\" type=\"text\" className=\"edit-input\" name=\"name\" onChange={(event)=>{this.onChange(event)}} defaultValue={this.props.center.center_name} />\r\n                    </div>\r\n                    <div className=\"mt-cts d-flex\">\r\n                      <lable className=\" position-absolute color-label\"><i className=\"fa fa-phone\" aria-hidden=\"true\" /> Phone number*:</lable>\r\n                      <input type=\"text\" placeholder=\"Example: 0123456789\" className=\"edit-input\" name=\"phone\" onChange={(event)=>{this.onChange(event)}} defaultValue={center.center_phone}/>\r\n                    </div>\r\n                    <div className=\"mt-cts d-flex\">\r\n                      <label className=\"  position-absolute color-label\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\" /> Address*:</label>\r\n                      <input  className=\"edit-input\" name=\"address\" onChange={(event)=>{this.onChange(event)}} defaultValue={center.center_address} />\r\n                    </div>\r\n                    <div className=\"mt-cts d-flex\">\r\n                      <label className=\"  position-absolute color-label\"><i className=\"fa fa-envelope-o\" aria-hidden=\"true\" /> Email*:</label>\r\n                      <input placeholder=\"Example: Email18800@gmail.com\" type=\"text\" className=\"edit-input\" name=\"email\" onChange={(event)=>{this.onChange(event)}} defaultValue={center.center_email}/>\r\n                    </div>\r\n                    <div className=\"mt-cts  d-flex\">\r\n                      <label className=\"position-absolute color-label\"><i className=\"fa fa-yelp\" aria-hidden=\"true\"/> Type Of Center*:</label>\r\n                      <select id=\"type\" name=\"type\" className=\"edit-input select-control\" onChange={(event)=>{this.onChange(event)}}>\r\n                        <option className=\"hidden\" selected disabled>Please choose one</option>\r\n                        <option value=\"Police\">Police </option>\r\n                        <option value=\"Hospital\">Hospital</option>\r\n                        <option value=\"Firefighter\">Firefighter</option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"position-relative d-flex \" style={{marginTop: '80px'}}>\r\n                      <button type=\"button\" onClick={()=>{this.saveInfo()}} name id className=\"btn btn-edit border border-primary  mx-auto border px-5 rounded-pill\">Save</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {center} = this.props\r\n        console.log(\"Dữ liệu nhận được từ info \"+this.props.center.center_address);\r\n        return (\r\n            <div className=\"flex-grow-1 map\">\r\n            <div className=\"contain\">\r\n              <div className=\"row w-100 p-2\">\r\n                <div className=\"col  col-8 mx-auto\">\r\n                  <div className=\"w-100 p-3 \">\r\n                    <h2 className=\"mx-auto h2-title text-center d-block position-relative\">CENTER\r\n                      INFORMATION</h2>\r\n                    <div className=\"content-man\">\r\n                      <div className=\"mt-4 d-flex mt-5\">\r\n                        <span className=\"ml-5 position-absolute\"><img className=\"verti-tb\" src=\"./png/house.png\" alt=\"\" /> Center Name*:</span>\r\n                       <span className=\"position-relative\" style={{left: '300px'}}>{center.center_name}</span>\r\n                      </div>\r\n                      <div className=\"mt-5 d-flex\">\r\n                        <span className=\"ml-5 position-absolute\"><img className=\"verti-tb\" src=\"./png/telephone.png\" alt=\"\" /> Phone number*:</span>\r\n                        <span className=\"position-relative\" style={{left: '300px'}}>{center.center_phone}</span>\r\n                      </div>\r\n                      <div className=\"mt-5 d-flex\">\r\n                        <span className=\" ml-5 position-absolute\"><img className=\"verti-tb\" src=\"./png/notebook.png\" alt=\"\" /> Address*:</span>\r\n                        <span className=\"position-relative\" style={{left: '300px'}}>{center.center_address}</span>\r\n                      </div>\r\n                      <div className=\"mt-5 d-flex\">\r\n                        <span className=\" ml-5 position-absolute\"><img className=\"verti-tb\" src=\"./png/gmail.png\" alt=\"\" /> Email*:</span>\r\n                        <span className=\"position-relative\" style={{left: '300px'}}>{center.center_email}</span>\r\n                      </div>\r\n                      <div className=\"mt-5 d-flex\">\r\n                        <span className=\"ml-5 position-absolute\"><img className=\"verti-tb\" src=\"./png/classification.png\" alt=\"\" /> Type Of Center*:</span>\r\n                        <span className=\"position-relative\" style={{left: '300px'}}>{center.center_type}</span>\r\n                      </div>\r\n                      <div className=\"mt-5 d-flex\">\r\n                        <button onClick={()=>{this.setStatus()}} type=\"button\" name id className=\"btn btn-edit mx-auto border px-4 rounded-pill\"><img className=\"mr-2 verti-tb\" src=\"./png/edit.png\" alt=\"\" /> Edit</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.showEdit()}\r\n          </div>\r\n          \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      center: state.centerInfo\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    setPage: (page) => {\r\n        dispatch(Set_Page(page));\r\n    },\r\n    getData: () => {\r\n        dispatch(Read_Data_Information());\r\n    },\r\n  }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Information)\r\n\r\n\r\n\r\n","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\CenterData.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\request.js",["202"],"import React, { Component } from 'react'\r\nimport {app} from '../firebaseConfig'\r\nimport { connect } from 'react-redux'\r\nimport {Set_Data} from '../Actions/Action_transactions'\r\nimport {SetUserLocation} from '../Actions/Actions'\r\n\r\nimport {generatorTime} from '../Utils/Time_generator'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Authority from './authority';\r\nclass request extends Component {\r\n    constructor(props) {\r\n       super(props);\r\n       this.user_latitude =null\r\n       this.user_longitude=null\r\n       this.centerID = localStorage.getItem('centerID')\r\n       this.database_GetUserID = app.database().ref().child(`Requests/${this.centerID}/`)\r\n       this.database_UpdateValue =  app.database().ref().child(`Requests/${this.centerID}/`)\r\n       this.state ={\r\n           show : false ,\r\n           userInfo:{},\r\n           request_Information:{}\r\n       }\r\n    }\r\n    componentDidMount(){\r\n      if(this.centerID){\r\n        this.database_GetUserID.on('value', (dataSnapshot)=> {  //Lắng nghe request từ user, nếu có id user\r\n          if(dataSnapshot.val().user_id)  \r\n          {\r\n            var a = localStorage.getItem('userLatitude')\r\n            var b = localStorage.getItem('userLongitude')\r\n            console.log(typeof a);\r\n            if(typeof a ==\"string\"){\r\n              localStorage.setItem('userLatitude',dataSnapshot.val().latitude_user)\r\n            }\r\n            if(b==null || b=='undefined'){\r\n              localStorage.setItem('userLongitude',dataSnapshot.val().longitude_user)\r\n            }\r\n               \r\n                this.user_latitude =dataSnapshot.val().latitude_user\r\n                this.user_longitude=dataSnapshot.val().longitude_user\r\n             \r\n           \r\n            this.setState({  \r\n              show : true,  \r\n              request_Information: dataSnapshot.val() //Lưu thông tin request vào state để khi accept thì gửi thông tin tracsaction lên db\r\n\r\n          },this.getUserInfo(dataSnapshot.val()))  //Có được id rồi thì get thông tin user rồi lưu vào state\r\n          }\r\n          else{\r\n              this.setState({\r\n                  show : false\r\n              })\r\n          }\r\n      })\r\n      }\r\n    }\r\n\r\n\r\n\r\n    reject_Request= ()=>{       \r\n    var date = generatorTime();      //Tao ra time để lưu thời gian request\r\n    this.setState({\r\n      show: false        //Ẩn form form request\r\n    })\r\n    const database_HistoryCenter = app.database().ref().child(`InfomationCenter/${localStorage.getItem('centerID')}/history/`) \r\n    database_HistoryCenter.push(  //Đẩy dữ liệu request lên db lưu vào history\r\n        { \"userName\": this.state.userInfo.name,\r\n        \"userPhone\": this.state.userInfo.phone,\r\n        \"userEmail\": this.state.userInfo.email,\r\n        \"userAddress\": this.state.userInfo.address,\r\n          \"status\":\"false\",       //Status đại diện cho việc center từ chối request\r\n          \"date\":date,\r\n          \"team_id\":\"\" ,\r\n        }\r\n        )\r\n      this.database_UpdateValue.update({    //Trả thông tin transaction về null\r\n              message_toUser:\"false\"   \r\n          }) \r\n      }\r\n      \r\n    accept_Request= ()=>{    \r\n      this.setState({\r\n        show: false        //Ẩn form form request\r\n      })\r\n      const generatorID = uuidv4()    //Tự tạo id transaction để lúc update team đã help thì biết được transaction nào\r\n      var data = {\r\n        ...this.state.request_Information,\r\n        request_id:generatorID,\r\n        userName:this.state.userInfo.name,\r\n        userPhone: this.state.userInfo.phone\r\n      }\r\n      this.props.setLocation(data)\r\n      this.props.setData(data)     //Lưu vào state để cpn update team helped nhận được\r\n      const database_HistoryCenter = app.database().ref().child(`InfomationCenter/${localStorage.getItem('centerID')}/history/${generatorID}`) \r\n      var date = generatorTime();     //Đẩy dữ liệu lên database lưu vào history\r\n      database_HistoryCenter.set(\r\n        {\r\n          \"userName\": this.state.userInfo.name,\r\n          \"userPhone\": this.state.userInfo.phone,\r\n          \"userEmail\": this.state.userInfo.email,\r\n          \"userAddress\": this.state.userInfo.address,\r\n          \"status\":\"true\",  //Status đại diện cho việc center có accept request không\r\n          \"date\":date,\r\n          \"team_id\":\"\" ,\r\n        }\r\n        )\r\n      this.database_UpdateValue.update({    //Update lại transaction và trả lời user\r\n              message_toUser:\"true\"  \r\n          }) \r\n      }   \r\n   \r\n   \r\n      showRequest =()=>{    \r\n        if(this.state.show){\r\n        return (\r\n        <div className=\"user-request\" id=\"modal\">   <i className=\"fa fa-user-o\" aria-hidden=\"true\" />\r\n            <div className=\"request-modal\">\r\n              <div className=\"modal-top\">\r\n                <div className=\"request-img\">\r\n                  <span className=\" avar-cs\">  <i className=\"fa fa-user-o avar-cs\" aria-hidden=\"true\" /></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-contain\">\r\n                <p className=\"location\">\r\n                  <span className=\" d-flex align-items-center ml-4\"><img style={{width: '32px'}} src=\"./png/user_request.png\" alt=\"\" /> Name:</span>\r\n                  <span className=\"m_left1 \r\n                    \">{this.state.userInfo.name}</span>\r\n                </p>\r\n                <p className=\"location\">\r\n                  <span className=\"float-left ml-4\"><img style={{width: '25px'}} src=\"./png/phone_request.png\" alt=\"\" /> Phone:</span>\r\n                  <span className=\"m_left2\">{this.state.userInfo.phone}</span>\r\n                </p>\r\n                <p className=\"location\">\r\n                  <span className=\" d-flex align-items-center ml-4\"><img style={{width: '32px'}} src=\"./png/placeholder.png\" alt=\"\" /> Location:</span>\r\n                  <span className=\"m_left3 \r\n                    \">{this.state.userInfo.address}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"request-button\">\r\n                <button type=\"button\" onClick={()=>{this.reject_Request()}} className=\"btn btn-danger btn-request btn-denied\"><img  src=\"./png/no-entry.png\" alt=\"\" /><span className=\"vertical-text ml-2\">REJECT</span></button>\r\n                <button type=\"button\"onClick={()=>{this.accept_Request()}} className=\"btn btn-success btn-request btn-accept\"><img src=\"./png/yes.png\" alt=\"\" /><span className=\"vertical-text ml-2\">ACCEPT</span></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          )\r\n    }}\r\n    getUserInfo =(value)=>{\r\n      const database_GetUserInfo = app.database().ref().child(`InfoUser/${value.user_id}/Information/`)\r\n      database_GetUserInfo.once('value',(dataSnapshot)=>{\r\n            this.setState({\r\n              userInfo: dataSnapshot.val()\r\n            })\r\n      })\r\n  } \r\n  Authority =()=>{    //Function hiển thị mini form authority cho team\r\n    if(this.props.transaction.status){\r\n      const user_latitude =  this.user_latitude \r\n      const user_longitude = this.user_longitude\r\n\r\n      return(\r\n        <Authority user_latitude={user_latitude} user_longitude={user_longitude}>\r\n        </Authority>\r\n      )\r\n    }\r\n  }\r\n\r\n      render() {\r\n                return(\r\n                    <>\r\n                    {this.showRequest()}\r\n                    {this.Authority()}\r\n                 </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      transaction: state.transaction2      //State để show miniform hay không?\r\n    }\r\n  }\r\n  \r\n  \r\n  const mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n      setData: (data) => {\r\n        dispatch(Set_Data(data));   //Action lưu id transaction vào reducer\r\n    },\r\n    setLocation:(location)=>{\r\n      dispatch(SetUserLocation(location)); \r\n      \r\n    }\r\n    }\r\n  } \r\nexport default connect(mapStateToProps,mapDispatchToProps)(request)","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\authority.js",["203","204","205","206"],"import React, { Component } from 'react'\r\nimport {app} from '../firebaseConfig'\r\nimport { connect } from 'react-redux'\r\nimport Team from './authoriryTeam'\r\nimport {Set_Status} from '../Actions/Action_transactions'\r\nimport {SetUserLocation} from '../Actions/Actions'\r\n\r\nclass authority extends Component {\r\n    constructor(props) {\r\n       super(props);\r\n       this.Database_GetData_Team = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/`)\r\n       this.state ={\r\n            DataTeam :{}\r\n       }\r\n    }\r\n    componentDidMount(){\r\n        this.Database_GetData_Team.on('value',(datasnapshot)=>{\r\n            this.setState({\r\n                DataTeam: datasnapshot.val(),\r\n                \r\n        })\r\n\r\n    } )}\r\n    authorityTeam=(teamID)=>{\r\n        const self = this\r\n        if(teamID){\r\n            const database_HistoryCenter = app.database().ref().child(`InfomationCenter/${localStorage.getItem('centerID')}/history/${this.props.transactionData.request_data.request_id}`) \r\n            const database_Mission = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/InforTeam/${teamID}/Mission/`) \r\n            const database_Transactions = app.database().ref().child(`CenterTeam/${localStorage.getItem('centerID')}/Transactions/${teamID}/`) \r\n            const database_GetUserInfo = app.database().ref().child(`InfoUser/${this.props.transactionData.request_data.user_id}/Information/`) \r\n            database_Transactions.update({\r\n                name:this.props.transactionData.request_data.userName,\r\n                phone:this.props.transactionData.request_data.userPhone, \r\n                user_id:this.props.transactionData.request_data.user_id,\r\n                user_latitude:this.props.transactionData.request_data.latitude_user,\r\n                user_longitude:this.props.transactionData.request_data.longitude_user,\r\n\r\n            }).then(()=>{\r\n                alert(\"Authorization Successfully\")\r\n\r\n            })\r\n            \r\n            database_Mission.update({\r\n                status: \"true\"\r\n            })\r\n            database_HistoryCenter.update({\r\n                \"team_id\":teamID\r\n            })\r\n            \r\n        }\r\n        this.props.hide();\r\n        this.props.setLocation({});\r\n\r\n    }\r\n     toRad=(Value)=>\r\n    {\r\n        return Value * Math.PI / 180;\r\n    }\r\n    cacurlatorDistance=(lat1, lng1, lat2, lng2)=>{\r\n        var R = 6371; // km\r\n        var dLat = this.toRad(lat2-lat1);\r\n        var dLon = this.toRad(lng2-lng1);\r\n        var lat1 = this.toRad(lat1);\r\n        var lat2 = this.toRad(lat2);\r\n  \r\n        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n        var distance = R * c;\r\n        return distance;\r\n    }\r\n    showForm = ()=>{\r\n            const team =this.state.DataTeam\r\n            console.log(team)\r\n            const user_latitude = localStorage.getItem('userLatitude')\r\n            const user_longitude = localStorage.getItem('userLongitude')\r\n            var result = Object.values(team).map((value,index)=>{\r\n                var distance=null\r\n                if(value.team_latitude){\r\n                const team_latitude = value.team_latitude\r\n                const team_longitude = value.team_longitude\r\n                distance = this.cacurlatorDistance(user_latitude,user_longitude,team_latitude,team_longitude)\r\n                }\r\n                \r\n                return(\r\n                    <Team distance={distance} update={(teamID)=>{this.authorityTeam(teamID)}} teamID={value.code} key={index} nameTeam={value.team_name} status={value.status_active}  ></Team>\r\n                )\r\n             })\r\n            return result \r\n        }\r\n\r\n    hideAuthority=()=>{\r\n        this.props.hide();\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n             <div className=\"authority_form\">\r\n                 <button onClick={()=>{this.hideAuthority()}} className=\"btn close_author btn-sm btn-danger rounded-circle\">\r\n                         <i class=\"fa author_ico fa-times\" aria-hidden=\"true\"></i>\r\n                 </button>\r\n                <h4 className=\"author_title\">AUTHORITY</h4>\r\n                <div className=\"team_container\">\r\n                {this.showForm()}\r\n                </div>\r\n            </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        transactionData: state.transaction2,\r\n    }\r\n  }\r\n  \r\n  \r\n  const mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    hide: () => {\r\n        dispatch(Set_Status());\r\n    },\r\n    setLocation: (location) => {\r\n        dispatch(SetUserLocation(location));\r\n    },\r\n    }\r\n  } \r\nexport default connect(mapStateToProps,mapDispatchToProps)(authority)","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\Transactions.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Utils\\Time_generator.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Actions\\Action_transactions.js",["207"],"import {app} from '../firebaseConfig'\r\n\r\n\r\nexport const Set_Data =(data)=>{\r\n    console.log(data);\r\n    return({\r\n        type : 'Action_SetData_For_Authority',\r\n         data\r\n    })\r\n} \r\n\r\n\r\nexport const Set_Status =()=>{\r\n    return({\r\n        type : 'Action_SetStatus2',\r\n        payload: false\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\authoriryTeam.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Hooks\\useGeoLocation.js",["208"],"import React from 'react'\r\nimport {useState,useEffect} from 'react-hooks'\r\n\r\n  const useGeoLocation = () => {\r\n\r\n    const [location ,setLocation] = useState({\r\n      loaded :false,\r\n      coordinates :{lat:\"\",lng:\"\"},\r\n    })\r\n     const onSuccess = (location)=>{\r\n      setLocation({\r\n        loaded:true,\r\n        coordinates:{\r\n          lat: location.coords.latitude,\r\n          lng:location.coords.longitude,\r\n        }\r\n      })\r\n    }\r\n    const onError= (error)=>{\r\n      setLocation({\r\n        loaded:true,\r\n        error\r\n      })\r\n    }\r\n    useEffect(() => {\r\n      if(!(\"geolocation\" in navigator)){\r\n        this.onError({\r\n              code: 0,\r\n              message: \"Geolocation not supported\"\r\n            })\r\n        }  \r\n    navigator.geolocation.getCurrentPosition(onSuccess,onError)\r\n    }, [])\r\n    return location\r\n}\r\n\r\n export  default useGeoLocation",["209","210"],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\Leaflex Components\\CenterLocation.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Login_Register.js",["211","212","213","214","215","216","217","218"],"import React, { Component } from 'react'\r\nimport {app} from '../firebaseConfig'\r\nimport { browserHistory } from \"react-router\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {UserLogin} from '../Actions/Actions'\r\nimport {\r\n    createBrowserHistory,\r\n  } from 'history'\r\nimport {connect} from 'react-redux'\r\nclass LoginRegister extends Component {\r\n  \r\n    constructor(props) {\r\n       super(props);\r\n       this.state ={\r\n            statusFormEdit:false,\r\n            name:\"\",\r\n            phone:\"\",\r\n            address:\"\",\r\n            email:\"\",\r\n            type:\"\"\r\n        }\r\n    }\r\n    onChange = (event) => {\r\n        var key = event.target.name;\r\n        var value =event.target.value;\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n    signup =()=>{\r\n        const center_email = this.state.center_email\r\n        const pass = this.state.center_password\r\n        const repass = this.state.confirm_password\r\n        const center_name = this.state.center_name\r\n        const center_phone = this.state.center_phone\r\n        const center_type = this.state.center_type\r\n        const center_city = this.state.center_city\r\n        const generatorID = uuidv4()    \r\n        const db_CenterTeam = app.database().ref().child(`CenterTeam/${generatorID}/`)\r\n        const db_InfomationTeam = app.database().ref().child(`InfomationCenter/${generatorID}/`)\r\n        const db_SupportTeam = app.database().ref().child(`SupportCenter/${center_type}/${center_city}/${generatorID}/`)\r\n        const db_Request = app.database().ref().child(`Requests/${generatorID}/`)\r\n\r\n\r\n        app.auth().createUserWithEmailAndPassword(center_email, pass)\r\n         .then((user) => {\r\n        alert(\"Đăng kí tài khoản thành công\")\r\n        var user = app.auth().currentUser;\r\n        if (user != null) {\r\n            user.providerData.forEach(function (profile) {\r\n            });\r\n          }\r\n        db_CenterTeam.set({\r\n            InforTeam:\"\",\r\n            Transactions:\"\"\r\n        })\r\n     db_InfomationTeam.set({\r\n            center_email,\r\n            center_name,\r\n            center_phone,\r\n            center_type,\r\n            center_city,\r\n            center_address:\"　\",\r\n            center_latitude:\"\",\r\n            center_longitude:\"\",\r\n            center_status:true,\r\n            center_id:generatorID,\r\n            history:\"\"\r\n              \r\n        })\r\n         db_SupportTeam.set({\r\n            center_name,\r\n            center_latitude:\"\",\r\n            center_longitude:\"\",\r\n            center_status:\"true\",\r\n            center_id:generatorID\r\n        }) \r\n         db_Request.set({\r\n          tran_status: true,\r\n          message_toUser:\"null\"\r\n         })\r\n        app.auth().signInWithEmailAndPassword(center_email, pass)\r\n        .then((user) => {\r\n            var user = app.auth().currentUser;\r\n                user.updateProfile({\r\n                    displayName:generatorID,\r\n                  }).then(function() {\r\n                    const database_getUserInfo = app.database().ref().child(`InfomationCenter/${generatorID}/`)\r\n                    database_getUserInfo.once('value',function(dataSnapshot){\r\n                        console.log(dataSnapshot.val())\r\n                        localStorage.setItem('centerID' ,dataSnapshot.val().center_id)\r\n                        localStorage.setItem( 'centerPhone' ,dataSnapshot.val().center_phone)\r\n                        localStorage.setItem( 'centerName' ,dataSnapshot.val().center_name)\r\n                        localStorage.setItem( 'centerStatus' ,dataSnapshot.val().center_status)\r\n                        localStorage.setItem( 'centerCity' ,dataSnapshot.val().center_city)\r\n                        localStorage.setItem( 'centerEmail' ,dataSnapshot.val().center_email)\r\n                        localStorage.setItem( 'centerType' ,dataSnapshot.val().center_type)\r\n                    })\r\n                     /*  app.auth().signOut().then(function() {\r\n                        console.log(\"logout thành công\")\r\n                        if (user != null) {\r\n                            user.providerData.forEach(function (profile) {\r\n                              console.log(\"  Name: \" + profile.displayName);\r\n                            });\r\n                          }\r\n                      }).catch(function(error) {\r\n                        console.log(\"logout thất bại\")\r\n                      }); */\r\n                  }).catch(function(error) {\r\n                    console.log(\"update profile thất bại\")\r\n                    \r\n                  });\r\n              }\r\n             )\r\n        .catch((error) => {\r\n            alert(\"Đang nhâp không thành công từ đăng kí\")\r\n           \r\n        });\r\n      \r\n\r\n    })\r\n  .catch((error) => {\r\n      alert(\"Đăng kí thất bại\")\r\n    var errorCode = error.code;\r\n   var  Message = error.message;\r\n  });\r\n    }\r\n\r\n\r\n    login= () =>{\r\n        const self = this\r\n        const history = createBrowserHistory();\r\n        const name = this.state.email\r\n        const {password}= this.state\r\n         app.auth().signInWithEmailAndPassword(name, password)\r\n        .then((user) => {\r\n        var user = app.auth().currentUser; // cần có \r\n        var userid = null;\r\n        if (user != null) {\r\n            user.providerData.forEach(function (profile) {\r\n              console.log(\"  User ID 1: \" + profile.displayName);\r\n              userid = profile.displayName\r\n              const database_getUserInfo = app.database().ref().child(`InfomationCenter/${userid}/`)\r\n              database_getUserInfo.once('value', function(dataSnapshot){\r\n              localStorage.setItem( 'latitude' ,dataSnapshot.val().center_latitude)\r\n              localStorage.setItem( 'longitude' ,dataSnapshot.val().center_longitude)\r\n              localStorage.setItem('centerID' ,dataSnapshot.val().center_id)\r\n              localStorage.setItem( 'centerPhone' ,dataSnapshot.val().center_phone)\r\n              localStorage.setItem( 'centerName' ,dataSnapshot.val().center_name)\r\n              localStorage.setItem( 'centerStatus' ,dataSnapshot.val().center_status)\r\n              localStorage.setItem( 'centerCity' ,dataSnapshot.val().center_city)\r\n              localStorage.setItem( 'centerEmail' ,dataSnapshot.val().center_email)\r\n              localStorage.setItem( 'centerType' ,dataSnapshot.val().center_type)\r\n              self.props.setUserLogin(dataSnapshot.val())\r\n\r\n             \r\n          })\r\n            });\r\n          }\r\n          console.log(\"user id 2 là :\"+userid)\r\n       \r\n  })\r\n        .catch((error) => {\r\n            alert(\"Đang nhâp không thành công\")\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    isChange=(e)=>{\r\n        var key = e.target.name\r\n        var value = e.target.value\r\n        this.setState({\r\n            [key]:value\r\n        })\r\n        console.log(e.target.value)\r\n        \r\n    }\r\n\r\n  componentDidMount(){\r\n \r\n  }\r\n  \r\n\r\n    render() {\r\n      \r\n        return (\r\n                    <div className=\"container register\">\r\n                      <div className=\"row rowcs1\">\r\n                        <div className=\"col-md-3 register-left\">\r\n                          <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" />\r\n                          <h3>Welcome</h3>\r\n                          <p>You are 30 seconds away from earning your own money!</p>\r\n                          <input type=\"submit\" name defaultValue=\"Login\" /><br />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-9 register-right\">\r\n                          <ul className=\"nav nav-tabs nav-justified\" id=\"myTab\" role=\"tablist\">\r\n                            <li className=\"nav-item nav-item1\">\r\n                              <a className=\"nav-link active cl_h33 \" id=\"home-tab\" data-toggle=\"tab\" href=\"#login\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Login</a>\r\n                            </li>\r\n                            <li className=\"nav-item nav-item1\">\r\n                              <a className=\"nav-link cl_h33\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#register\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Register</a>\r\n                            </li>\r\n                          </ul>\r\n\r\n\r\n                          <div className=\"tab-content\" id=\"myTabContent\">\r\n                            <div className=\"tab-pane fade show active\" id=\"login\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                              <h3 className=\"register-heading\">Login</h3>\r\n                              <div className=\"row register-form\">\r\n                                <div className=\"col-md-10\">\r\n                                  <form action=\"/login\" method=\"POST\" className=\"form\" id=\"form-1\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}}  id=\"email\" name=\"email\" type=\"text\" placeholder=\"Email Address *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}}  id=\"password\" name=\"password\" type=\"text\" placeholder=\"Password *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                    <button type=\"button\" onClick={()=>{this.login()}} className=\"btnRegister2\">Login</button>\r\n                                    <div className=\"err-message\" style={{marginTop: '15px'}}>\r\n                                    </div>\r\n                                  </form>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"tab-pane fade show\" id=\"register\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\r\n                              <h3 className=\"register-heading\">Register</h3>\r\n                              <form action=\"/register\" method=\"POST\" className=\"form\" id=\"form-1\">\r\n                                <div className=\"row register-form\">\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"fullname\" className=\"form-label\">Center Name</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}} id=\"fullname\" name=\"center_name\" type=\"text\" placeholder=\"Center Name *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"phone\" className=\"form-label\">Phone Number</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}}  id=\"phone\" name=\"center_phone\" type=\"text\" placeholder=\"Phone Number *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"form-group div_cus\">\r\n                                        <div className=\"type_center\">\r\n                                        <label htmlFor=\"type\" className=\"form-label\">Type</label>\r\n                                      <select onChange={(e)=>{this.isChange(e)}}  id=\"type\" name=\"center_type\" className=\"form-control\">\r\n                                        <option className=\"hidden\" selected disabled>Choose one</option>\r\n                                        <option value=\"Police\">Police</option>\r\n                                        <option value=\"Hospital\">Hospital</option>\r\n                                        <option value=\"Fire Fight\">Fire Fight</option>\r\n                                      </select>\r\n                                        </div>\r\n                                        <div className=\"city_center\">\r\n                                        <label htmlFor=\"type\" className=\"form-label\">City</label>\r\n                                      <select onChange={(e)=>{this.isChange(e)}}  id=\"type\" name=\"center_city\" className=\"form-control\">\r\n                                        <option className=\"hidden\" selected disabled>Choose one</option>\r\n                                        <option value=\"Đà Nẵng\">Đà Nẵng</option>\r\n                                        <option value=\"Hồ Chí Mình\">Hồ Chí Minh</option>\r\n                                        <option value=\"Hà Nội\">Hà Nội</option>\r\n                                      </select>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    \r\n                                  </div>\r\n                                  <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}}  id=\"email\" name=\"center_email\" type=\"text\" placeholder=\"Your email *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"password_register\" className=\"form-label\">Password</label>\r\n                                      <input onChange={(e)=>{this.isChange(e)}}  id=\"password\" name=\"center_password\" type=\"password\" placeholder=\"Password *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                      <label htmlFor=\"re-password_register\" className=\"form-label\">Confirm Password</label>\r\n                                      <input  onChange={(e)=>{this.isChange(e)}} id=\"password\" name=\"confirm_password\" type=\"password\" placeholder=\"Confirm Password *\" className=\"form-control\" />\r\n                                      <span className=\"form-message\" />\r\n                                    </div>\r\n                                  </div>\r\n                                \r\n                                  <button type=\"button\" onClick={()=>{this.signup()}} className=\"btnRegister\">Continue</button>\r\n                                </div></form>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n            }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    \r\n    setUserLogin: (user) => {\r\n      dispatch(UserLogin(user));\r\n  },\r\n  setUserLogout: (user) => {\r\n    dispatch(UserLogin(user));\r\n},\r\n    \r\n     \r\n  }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginRegister)","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Apps2.js",["219","220","221"],"import React, { useEffect } from 'react';\r\nimport Menu from './Components/menu.js';\r\nimport routes from './Routes'\r\nimport Header from './Components/header.js'\r\nimport Request from './Components/request'\r\nimport LoginRegister from './Pages/Login_Register'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n  } from \"react-router-dom\";\r\n\r\nexport const Component = (props) => {\r\n  \r\n    return(\r\n        <>\r\n        <div className=\"row h-100 bg_main \">\r\n        <Menu/>\r\n        <div id=\"tmp_id\" className=\"col-md-10 h-100 customize-layout-right d-flex flex-column\"> \r\n        <Header/>\r\n        <Redirection/> \r\n        </div>\r\n        </div> \r\n        <Request></Request>\r\n        </>\r\n    )\r\n}\r\nfunction Redirection(){\r\n    const match = useRouteMatch()\r\n    console.log({match});\r\n    var result = null;\r\n    result = routes.map((route,index)=>{\r\n      console.log(`${match.url}${route.path}`)\r\n      return <Route path={`${match.url}${route.path}`} component={route.page}  key={index} exact = {route.exact}>\r\n\r\n      </Route>\r\n    });\r\n    return  <Switch>{result}</Switch>;\r\n  }\r\n\r\nexport default Component","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\UserLogin.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Exit.js",["222","223"],"import React, { Component } from 'react'\r\nimport {app} from '../firebaseConfig'\r\nimport {UserLogin} from '../Actions/Actions'\r\nimport {\r\n    createBrowserHistory,\r\n    createHashHistory,\r\n    createMemoryHistory\r\n  } from 'history'\r\nimport {connect} from 'react-redux'\r\n\r\n class Exit extends Component {\r\n    componentDidMount (){\r\n          app.auth().signOut().then(function() {\r\n          console.log(\"logout thành công\")\r\n          localStorage.removeItem('centerID' )\r\n          localStorage.removeItem( 'centerPhone' )\r\n          localStorage.removeItem( 'centerName' )\r\n          localStorage.removeItem( 'centerStatus' )\r\n          localStorage.removeItem( 'centerCity' )\r\n          localStorage.removeItem( 'centerEmail' )\r\n          localStorage.removeItem( 'centerType')\r\n          localStorage.removeItem( 'latitude')\r\n          localStorage.removeItem( 'longitude')\r\n            \r\n        }).catch(function(error) {\r\n          console.log(\"logout thất bại\")\r\n\r\n        });\r\n        const history =  createBrowserHistory()\r\n        history.push('./')\r\n        this.logout()\r\n    }\r\n\r\n    logout=()=>{\r\n      const centerCity = localStorage.getItem('centerCity')\r\n      const centerID = localStorage.getItem('centerID')\r\n      const centerType = localStorage.getItem('centerType')\r\n     \r\n      const database_getCenterStatus = app.database().ref().child(`SupportCenter/${centerType}/${centerCity}/${centerID}/`)\r\n      database_getCenterStatus.update({\r\n        center_status:\"false\"\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <h1>NOT FOUND PAGE</h1>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    \r\n  setUserLogout: (user) => {\r\n    dispatch(UserLogin(user));\r\n},\r\n    \r\n     \r\n  }\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Exit)","D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Dashboard.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Setting.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Pages\\Help.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Components\\historyItem.js",[],"D:\\Workspace\\Rescue System\\Rescue System\\client\\src\\Reducers\\UserLocation.js",[],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":65,"column":21,"nodeType":"230","messageId":"231","endLine":65,"endColumn":27},{"ruleId":"228","severity":1,"message":"232","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":28},{"ruleId":"228","severity":1,"message":"233","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":17},{"ruleId":"228","severity":1,"message":"234","line":40,"column":8,"nodeType":"230","messageId":"231","endLine":40,"endColumn":19},{"ruleId":"228","severity":1,"message":"235","line":42,"column":8,"nodeType":"230","messageId":"231","endLine":42,"endColumn":20},{"ruleId":"228","severity":1,"message":"236","line":42,"column":22,"nodeType":"230","messageId":"231","endLine":42,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":43,"column":8,"nodeType":"230","messageId":"231","endLine":43,"endColumn":20},{"ruleId":"228","severity":1,"message":"238","line":43,"column":22,"nodeType":"230","messageId":"231","endLine":43,"endColumn":37},{"ruleId":"239","severity":1,"message":"240","line":70,"column":37,"nodeType":"241","endLine":70,"endColumn":90},{"ruleId":"239","severity":1,"message":"242","line":71,"column":42,"nodeType":"241","endLine":71,"endColumn":108},{"ruleId":"228","severity":1,"message":"243","line":199,"column":9,"nodeType":"230","messageId":"231","endLine":199,"endColumn":24},{"ruleId":"244","severity":1,"message":"245","line":219,"column":60,"nodeType":"246","messageId":"247","endLine":219,"endColumn":62},{"ruleId":"228","severity":1,"message":"248","line":224,"column":11,"nodeType":"230","messageId":"231","endLine":224,"endColumn":16},{"ruleId":"244","severity":1,"message":"245","line":242,"column":60,"nodeType":"246","messageId":"247","endLine":242,"endColumn":62},{"ruleId":"228","severity":1,"message":"249","line":250,"column":11,"nodeType":"230","messageId":"231","endLine":250,"endColumn":18},{"ruleId":"228","severity":1,"message":"250","line":267,"column":7,"nodeType":"230","messageId":"231","endLine":267,"endColumn":22},{"ruleId":"228","severity":1,"message":"251","line":270,"column":11,"nodeType":"230","messageId":"231","endLine":270,"endColumn":19},{"ruleId":"228","severity":1,"message":"252","line":271,"column":11,"nodeType":"230","messageId":"231","endLine":271,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":78,"column":9,"nodeType":"255","endLine":78,"endColumn":153},{"ruleId":"256","severity":1,"message":"257","line":177,"column":20,"nodeType":"258","messageId":"259","endLine":177,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":119,"column":40,"nodeType":"258","messageId":"259","endLine":119,"endColumn":42},{"ruleId":"256","severity":1,"message":"257","line":123,"column":28,"nodeType":"258","messageId":"259","endLine":123,"endColumn":30},{"ruleId":"260","severity":1,"message":"261","line":152,"column":21,"nodeType":"255","endLine":152,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":153,"column":21,"nodeType":"255","endLine":153,"endColumn":33},{"ruleId":"260","severity":1,"message":"261","line":154,"column":21,"nodeType":"255","endLine":154,"endColumn":33},{"ruleId":"224","replacedBy":"262"},{"ruleId":"226","replacedBy":"263"},{"ruleId":"224","replacedBy":"264"},{"ruleId":"226","replacedBy":"265"},{"ruleId":"256","severity":1,"message":"257","line":76,"column":28,"nodeType":"258","messageId":"259","endLine":76,"endColumn":30},{"ruleId":"256","severity":1,"message":"257","line":35,"column":28,"nodeType":"258","messageId":"259","endLine":35,"endColumn":30},{"ruleId":"228","severity":1,"message":"266","line":25,"column":15,"nodeType":"230","messageId":"231","endLine":25,"endColumn":19},{"ruleId":"228","severity":1,"message":"267","line":30,"column":19,"nodeType":"230","messageId":"231","endLine":30,"endColumn":39},{"ruleId":"268","severity":1,"message":"269","line":63,"column":13,"nodeType":"230","messageId":"270","endLine":63,"endColumn":17},{"ruleId":"268","severity":1,"message":"271","line":64,"column":13,"nodeType":"230","messageId":"270","endLine":64,"endColumn":17},{"ruleId":"228","severity":1,"message":"272","line":1,"column":9,"nodeType":"230","messageId":"231","endLine":1,"endColumn":12},{"ruleId":"228","severity":1,"message":"273","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":13},{"ruleId":"224","replacedBy":"274"},{"ruleId":"226","replacedBy":"275"},{"ruleId":"228","severity":1,"message":"276","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":24},{"ruleId":"228","severity":1,"message":"277","line":33,"column":15,"nodeType":"230","messageId":"231","endLine":33,"endColumn":21},{"ruleId":"268","severity":1,"message":"278","line":48,"column":13,"nodeType":"230","messageId":"270","endLine":48,"endColumn":17},{"ruleId":"268","severity":1,"message":"278","line":84,"column":17,"nodeType":"230","messageId":"270","endLine":84,"endColumn":21},{"ruleId":"228","severity":1,"message":"279","line":124,"column":9,"nodeType":"230","messageId":"231","endLine":124,"endColumn":18},{"ruleId":"228","severity":1,"message":"249","line":125,"column":9,"nodeType":"230","messageId":"231","endLine":125,"endColumn":16},{"ruleId":"228","severity":1,"message":"280","line":132,"column":15,"nodeType":"230","messageId":"231","endLine":132,"endColumn":22},{"ruleId":"268","severity":1,"message":"278","line":137,"column":13,"nodeType":"230","messageId":"270","endLine":137,"endColumn":17},{"ruleId":"228","severity":1,"message":"281","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"282","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":21},{"ruleId":"228","severity":1,"message":"283","line":8,"column":22,"nodeType":"230","messageId":"231","endLine":8,"endColumn":28},{"ruleId":"228","severity":1,"message":"284","line":6,"column":5,"nodeType":"230","messageId":"231","endLine":6,"endColumn":22},{"ruleId":"228","severity":1,"message":"285","line":7,"column":5,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'active' is assigned a value but never used.","Identifier","unusedVar","'useFetching' is defined but never used.","'connect' is defined but never used.","'tmpLocation' is assigned a value but never used.","'TeamLocation' is assigned a value but never used.","'setTeamLocation' is assigned a value but never used.","'UserLocation' is assigned a value but never used.","'setUserLocation' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'database_getCenterLocation' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'database_UpdateLocationSupport' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'toggleDraggable' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'phone' is assigned a value but never used.","'Message' is assigned a value but never used.","'ShowUserRequest' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Li_Listteam must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["286"],["287"],["286"],["287"],"'self' is assigned a value but never used.","'database_GetUserInfo' is assigned a value but never used.","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'app' is defined but never used.","'React' is defined but never used.",["286"],["287"],"'browserHistory' is defined but never used.","'repass' is assigned a value but never used.","'user' is already defined.","'errorCode' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'LoginRegister' is defined but never used.","'Router' is defined but never used.","'createHashHistory' is defined but never used.","'createMemoryHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]